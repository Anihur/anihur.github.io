<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Eth0s...</title><link href="/" rel="alternate"></link><link href="anihur.es/feeds/all-es.atom.xml" rel="self"></link><id>/</id><updated>2013-01-25T10:31:00+01:00</updated><entry><title>Obtener todos los ficheros cuyo nombre cumpla un patrón en python</title><link href="/obtener-todos-los-ficheros-cuyo-nombre-cumpla-un-patron-en-python.html" rel="alternate"></link><updated>2013-01-25T10:31:00+01:00</updated><author><name></name></author><id>tag:,2013-01-25:obtener-todos-los-ficheros-cuyo-nombre-cumpla-un-patron-en-python.html</id><summary type="html">&lt;p&gt;Vamos a obtener mediante python todos los ficheros que cumplen determinado patrón en el nombre. En este ejemplo vamos a obtener una lista con el nombre de todos los ficheros ubicados en . que cumplan *.cfg&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;
&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;patron&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;*.cfg&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;list_config_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;patron&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fichero&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list_config_files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Fichero: {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fichero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="PYTHON"></category></entry><entry><title>Enumerar las iteraciones de un bucle en python</title><link href="/enumerar-las-iteraciones-de-un-bucle-en-python.html" rel="alternate"></link><updated>2013-01-11T12:05:00+01:00</updated><author><name></name></author><id>tag:,2013-01-11:enumerar-las-iteraciones-de-un-bucle-en-python.html</id><summary type="html">&lt;p&gt;Podemos utilizar &lt;em&gt;enumerate&lt;/em&gt; de python como se puede ver en el siguiente
ejemplo:&lt;/p&gt;
&lt;!-- code-block::python

var=['Caracola',22,'Pez',45,16]

for idx, valor in enumerate(var):
  print idx, valor --&gt;
&lt;p&gt;Siendo la salida por consola:&lt;/p&gt;
&lt;!-- code-block::console

Python 2.7.3 (default, Aug 1 2012, 05:14:39)
[GCC 4.6.3] on linux2
Type "help", "copyright", "credits" or "license" for more information
&gt;&gt;&gt; var=['Caracola',22,'Pez',45,16]
&gt;&gt;&gt; for idx, valor in enumerate(var):
... print idx, valor
...
0 Caracola
1 22
2 Pez
3 45
4 16
&gt;&gt;&gt; --&gt;
&lt;p&gt;Fuentes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.doughellmann.com/PyMOTW/glob/"&gt;Doug Hellman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="PYTHON"></category></entry></feed>